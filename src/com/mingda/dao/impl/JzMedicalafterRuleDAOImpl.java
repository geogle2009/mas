package com.mingda.dao.impl;

import com.mingda.dao.JzMedicalafterRuleDAO;
import com.mingda.model.JzMedicalafterRule;
import com.mingda.model.JzMedicalafterRuleExample;
import java.math.BigDecimal;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class JzMedicalafterRuleDAOImpl extends SqlMapClientDaoSupport implements JzMedicalafterRuleDAO {

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public JzMedicalafterRuleDAOImpl() {
		super();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int countByExample(JzMedicalafterRuleExample example) {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_countByExample", example);
		return count;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int deleteByExample(JzMedicalafterRuleExample example) {
		int rows = getSqlMapClientTemplate()
				.delete("JZ_MEDICALAFTER_RULE.ibatorgenerated_deleteByExample",
						example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int deleteByPrimaryKey(BigDecimal ruleId) {
		JzMedicalafterRule key = new JzMedicalafterRule();
		key.setRuleId(ruleId);
		int rows = getSqlMapClientTemplate().delete(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public BigDecimal insert(JzMedicalafterRule record) {
		Object newKey = getSqlMapClientTemplate().insert(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_insert", record);
		return (BigDecimal) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public BigDecimal insertSelective(JzMedicalafterRule record) {
		Object newKey = getSqlMapClientTemplate().insert(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_insertSelective", record);
		return (BigDecimal) newKey;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	@SuppressWarnings("unchecked")
	public List<JzMedicalafterRule> selectByExample(
			JzMedicalafterRuleExample example) {
		List<JzMedicalafterRule> list = getSqlMapClientTemplate()
				.queryForList(
						"JZ_MEDICALAFTER_RULE.ibatorgenerated_selectByExample",
						example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public JzMedicalafterRule selectByPrimaryKey(BigDecimal ruleId) {
		JzMedicalafterRule key = new JzMedicalafterRule();
		key.setRuleId(ruleId);
		JzMedicalafterRule record = (JzMedicalafterRule) getSqlMapClientTemplate()
				.queryForObject(
						"JZ_MEDICALAFTER_RULE.ibatorgenerated_selectByPrimaryKey",
						key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int updateByExampleSelective(JzMedicalafterRule record,
			JzMedicalafterRuleExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate()
				.update("JZ_MEDICALAFTER_RULE.ibatorgenerated_updateByExampleSelective",
						parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int updateByExample(JzMedicalafterRule record,
			JzMedicalafterRuleExample example) {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int updateByPrimaryKeySelective(JzMedicalafterRule record) {
		int rows = getSqlMapClientTemplate()
				.update("JZ_MEDICALAFTER_RULE.ibatorgenerated_updateByPrimaryKeySelective",
						record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	public int updateByPrimaryKey(JzMedicalafterRule record) {
		int rows = getSqlMapClientTemplate().update(
				"JZ_MEDICALAFTER_RULE.ibatorgenerated_updateByPrimaryKey",
				record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table MEDICAL.JZ_MEDICALAFTER_RULE
	 * @ibatorgenerated  Thu Apr 11 15:47:37 CST 2013
	 */
	private static class UpdateByExampleParms extends JzMedicalafterRuleExample {
		private Object record;

		public UpdateByExampleParms(Object record,
				JzMedicalafterRuleExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
}