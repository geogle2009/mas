package com.mingda.dao.impl;

import com.mingda.dao.HospitalPayDAO;
import com.mingda.model.HospitalPay;
import com.mingda.model.HospitalPayExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class HospitalPayDAOImpl extends SqlMapClientDaoSupport implements HospitalPayDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public HospitalPayDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int countByExample(HospitalPayExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("HOSPITAL_PAY.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int deleteByExample(HospitalPayExample example) {
        int rows = getSqlMapClientTemplate().delete("HOSPITAL_PAY.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int deleteByPrimaryKey(Integer hospitalId) {
        HospitalPay key = new HospitalPay();
        key.setHospitalId(hospitalId);
        int rows = getSqlMapClientTemplate().delete("HOSPITAL_PAY.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public void insert(HospitalPay record) {
        getSqlMapClientTemplate().insert("HOSPITAL_PAY.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public void insertSelective(HospitalPay record) {
        getSqlMapClientTemplate().insert("HOSPITAL_PAY.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    @SuppressWarnings("unchecked")
    public List<HospitalPay> selectByExample(HospitalPayExample example) {
        List<HospitalPay> list = getSqlMapClientTemplate().queryForList("HOSPITAL_PAY.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public HospitalPay selectByPrimaryKey(Integer hospitalId) {
        HospitalPay key = new HospitalPay();
        key.setHospitalId(hospitalId);
        HospitalPay record = (HospitalPay) getSqlMapClientTemplate().queryForObject("HOSPITAL_PAY.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int updateByExampleSelective(HospitalPay record, HospitalPayExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("HOSPITAL_PAY.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int updateByExample(HospitalPay record, HospitalPayExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("HOSPITAL_PAY.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int updateByPrimaryKeySelective(HospitalPay record) {
        int rows = getSqlMapClientTemplate().update("HOSPITAL_PAY.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public int updateByPrimaryKey(HospitalPay record) {
        int rows = getSqlMapClientTemplate().update("HOSPITAL_PAY.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    private static class UpdateByExampleParms extends HospitalPayExample {
        private Object record;

        public UpdateByExampleParms(Object record, HospitalPayExample example) {
            super(example);
            this.record = record;
        }

        @SuppressWarnings("unused")
		public Object getRecord() {
            return record;
        }
    }
}