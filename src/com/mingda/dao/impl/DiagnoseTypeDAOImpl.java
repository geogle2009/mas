package com.mingda.dao.impl;

import com.mingda.dao.DiagnoseTypeDAO;
import com.mingda.model.DiagnoseType;
import com.mingda.model.DiagnoseTypeExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class DiagnoseTypeDAOImpl extends SqlMapClientDaoSupport implements DiagnoseTypeDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public DiagnoseTypeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int countByExample(DiagnoseTypeExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("DIAGNOSE_TYPE.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int deleteByExample(DiagnoseTypeExample example) {
        int rows = getSqlMapClientTemplate().delete("DIAGNOSE_TYPE.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int deleteByPrimaryKey(Integer diagnoseTypeId) {
        DiagnoseType key = new DiagnoseType();
        key.setDiagnoseTypeId(diagnoseTypeId);
        int rows = getSqlMapClientTemplate().delete("DIAGNOSE_TYPE.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public void insert(DiagnoseType record) {
        getSqlMapClientTemplate().insert("DIAGNOSE_TYPE.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public void insertSelective(DiagnoseType record) {
        getSqlMapClientTemplate().insert("DIAGNOSE_TYPE.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    @SuppressWarnings("unchecked")
    public List<DiagnoseType> selectByExample(DiagnoseTypeExample example) {
        List<DiagnoseType> list = getSqlMapClientTemplate().queryForList("DIAGNOSE_TYPE.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public DiagnoseType selectByPrimaryKey(Integer diagnoseTypeId) {
        DiagnoseType key = new DiagnoseType();
        key.setDiagnoseTypeId(diagnoseTypeId);
        DiagnoseType record = (DiagnoseType) getSqlMapClientTemplate().queryForObject("DIAGNOSE_TYPE.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int updateByExampleSelective(DiagnoseType record, DiagnoseTypeExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("DIAGNOSE_TYPE.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int updateByExample(DiagnoseType record, DiagnoseTypeExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("DIAGNOSE_TYPE.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int updateByPrimaryKeySelective(DiagnoseType record) {
        int rows = getSqlMapClientTemplate().update("DIAGNOSE_TYPE.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    public int updateByPrimaryKey(DiagnoseType record) {
        int rows = getSqlMapClientTemplate().update("DIAGNOSE_TYPE.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.DIAGNOSE_TYPE
     *
     * @ibatorgenerated Mon Aug 12 12:19:57 CST 2013
     */
    private static class UpdateByExampleParms extends DiagnoseTypeExample {
        private Object record;

        public UpdateByExampleParms(Object record, DiagnoseTypeExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}