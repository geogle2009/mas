package com.mingda.dao.impl;

import com.mingda.dao.AddressBookDAO;
import com.mingda.model.AddressBook;
import com.mingda.model.AddressBookExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class AddressBookDAOImpl extends SqlMapClientDaoSupport implements AddressBookDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public AddressBookDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int countByExample(AddressBookExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("ADDRESS_BOOK.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int deleteByExample(AddressBookExample example) {
        int rows = getSqlMapClientTemplate().delete("ADDRESS_BOOK.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int deleteByPrimaryKey(Integer empId) {
        AddressBook key = new AddressBook();
        key.setEmpId(empId);
        int rows = getSqlMapClientTemplate().delete("ADDRESS_BOOK.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public Integer insert(AddressBook record) {
        Object newKey = getSqlMapClientTemplate().insert("ADDRESS_BOOK.ibatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public Integer insertSelective(AddressBook record) {
        Object newKey = getSqlMapClientTemplate().insert("ADDRESS_BOOK.ibatorgenerated_insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    @SuppressWarnings("unchecked")
    public List<AddressBook> selectByExample(AddressBookExample example) {
        List<AddressBook> list = getSqlMapClientTemplate().queryForList("ADDRESS_BOOK.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public AddressBook selectByPrimaryKey(Integer empId) {
        AddressBook key = new AddressBook();
        key.setEmpId(empId);
        AddressBook record = (AddressBook) getSqlMapClientTemplate().queryForObject("ADDRESS_BOOK.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int updateByExampleSelective(AddressBook record, AddressBookExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("ADDRESS_BOOK.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int updateByExample(AddressBook record, AddressBookExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("ADDRESS_BOOK.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int updateByPrimaryKeySelective(AddressBook record) {
        int rows = getSqlMapClientTemplate().update("ADDRESS_BOOK.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    public int updateByPrimaryKey(AddressBook record) {
        int rows = getSqlMapClientTemplate().update("ADDRESS_BOOK.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.ADDRESS_BOOK
     *
     * @ibatorgenerated Wed Nov 03 02:30:40 GMT 2010
     */
    private static class UpdateByExampleParms extends AddressBookExample {
        private Object record;

        public UpdateByExampleParms(Object record, AddressBookExample example) {
            super(example);
            this.record = record;
        }

        @SuppressWarnings("unused")
		public Object getRecord() {
            return record;
        }
    }
}