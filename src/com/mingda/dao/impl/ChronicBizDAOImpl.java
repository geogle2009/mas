package com.mingda.dao.impl;

import com.mingda.dao.ChronicBizDAO;
import com.mingda.model.ChronicBiz;
import com.mingda.model.ChronicBizExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class ChronicBizDAOImpl extends SqlMapClientDaoSupport implements ChronicBizDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public ChronicBizDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int countByExample(ChronicBizExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("CHRONIC_BIZ.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int deleteByExample(ChronicBizExample example) {
        int rows = getSqlMapClientTemplate().delete("CHRONIC_BIZ.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int deleteByPrimaryKey(Integer bizId) {
        ChronicBiz key = new ChronicBiz();
        key.setBizId(bizId);
        int rows = getSqlMapClientTemplate().delete("CHRONIC_BIZ.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public Integer insert(ChronicBiz record) {
        Object newKey = getSqlMapClientTemplate().insert("CHRONIC_BIZ.ibatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public Integer insertSelective(ChronicBiz record) {
        Object newKey = getSqlMapClientTemplate().insert("CHRONIC_BIZ.ibatorgenerated_insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    @SuppressWarnings("unchecked")
    public List<ChronicBiz> selectByExample(ChronicBizExample example) {
        List<ChronicBiz> list = getSqlMapClientTemplate().queryForList("CHRONIC_BIZ.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public ChronicBiz selectByPrimaryKey(Integer bizId) {
        ChronicBiz key = new ChronicBiz();
        key.setBizId(bizId);
        ChronicBiz record = (ChronicBiz) getSqlMapClientTemplate().queryForObject("CHRONIC_BIZ.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int updateByExampleSelective(ChronicBiz record, ChronicBizExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("CHRONIC_BIZ.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int updateByExample(ChronicBiz record, ChronicBizExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("CHRONIC_BIZ.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int updateByPrimaryKeySelective(ChronicBiz record) {
        int rows = getSqlMapClientTemplate().update("CHRONIC_BIZ.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    public int updateByPrimaryKey(ChronicBiz record) {
        int rows = getSqlMapClientTemplate().update("CHRONIC_BIZ.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.CHRONIC_BIZ
     *
     * @ibatorgenerated Mon Nov 19 09:38:05 CST 2012
     */
    private static class UpdateByExampleParms extends ChronicBizExample {
        private Object record;

        public UpdateByExampleParms(Object record, ChronicBizExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}