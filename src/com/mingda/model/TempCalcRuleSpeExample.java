package com.mingda.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TempCalcRuleSpeExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public TempCalcRuleSpeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	protected TempCalcRuleSpeExample(TempCalcRuleSpeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table MEDICAL.TEMP_CALC_RULE_SPE
	 * @ibatorgenerated  Tue Apr 02 17:25:14 CST 2013
	 */
	public static class Criteria {
		protected List<String> criteriaWithoutValue;
		protected List<Map<String, Object>> criteriaWithSingleValue;
		protected List<Map<String, Object>> criteriaWithListValue;
		protected List<Map<String, Object>> criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList<String>();
			criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
			criteriaWithListValue = new ArrayList<Map<String, Object>>();
			criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List<String> getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List<Map<String, Object>> getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List<Map<String, Object>> getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List<Map<String, Object>> getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition,
				List<? extends Object> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List<Object> list = new ArrayList<Object>();
			list.add(value1);
			list.add(value2);
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andRuletempspeIdIsNull() {
			addCriterion("RULETEMPSPE_ID is null");
			return this;
		}

		public Criteria andRuletempspeIdIsNotNull() {
			addCriterion("RULETEMPSPE_ID is not null");
			return this;
		}

		public Criteria andRuletempspeIdEqualTo(Integer value) {
			addCriterion("RULETEMPSPE_ID =", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdNotEqualTo(Integer value) {
			addCriterion("RULETEMPSPE_ID <>", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdGreaterThan(Integer value) {
			addCriterion("RULETEMPSPE_ID >", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("RULETEMPSPE_ID >=", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdLessThan(Integer value) {
			addCriterion("RULETEMPSPE_ID <", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdLessThanOrEqualTo(Integer value) {
			addCriterion("RULETEMPSPE_ID <=", value, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdIn(List<Integer> values) {
			addCriterion("RULETEMPSPE_ID in", values, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdNotIn(List<Integer> values) {
			addCriterion("RULETEMPSPE_ID not in", values, "ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdBetween(Integer value1, Integer value2) {
			addCriterion("RULETEMPSPE_ID between", value1, value2,
					"ruletempspeId");
			return this;
		}

		public Criteria andRuletempspeIdNotBetween(Integer value1,
				Integer value2) {
			addCriterion("RULETEMPSPE_ID not between", value1, value2,
					"ruletempspeId");
			return this;
		}

		public Criteria andOrganizationIdIsNull() {
			addCriterion("ORGANIZATION_ID is null");
			return this;
		}

		public Criteria andOrganizationIdIsNotNull() {
			addCriterion("ORGANIZATION_ID is not null");
			return this;
		}

		public Criteria andOrganizationIdEqualTo(String value) {
			addCriterion("ORGANIZATION_ID =", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdNotEqualTo(String value) {
			addCriterion("ORGANIZATION_ID <>", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdGreaterThan(String value) {
			addCriterion("ORGANIZATION_ID >", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdGreaterThanOrEqualTo(String value) {
			addCriterion("ORGANIZATION_ID >=", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdLessThan(String value) {
			addCriterion("ORGANIZATION_ID <", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdLessThanOrEqualTo(String value) {
			addCriterion("ORGANIZATION_ID <=", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdLike(String value) {
			addCriterion("ORGANIZATION_ID like", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdNotLike(String value) {
			addCriterion("ORGANIZATION_ID not like", value, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdIn(List<String> values) {
			addCriterion("ORGANIZATION_ID in", values, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdNotIn(List<String> values) {
			addCriterion("ORGANIZATION_ID not in", values, "organizationId");
			return this;
		}

		public Criteria andOrganizationIdBetween(String value1, String value2) {
			addCriterion("ORGANIZATION_ID between", value1, value2,
					"organizationId");
			return this;
		}

		public Criteria andOrganizationIdNotBetween(String value1, String value2) {
			addCriterion("ORGANIZATION_ID not between", value1, value2,
					"organizationId");
			return this;
		}

		public Criteria andPersonTypeIsNull() {
			addCriterion("PERSON_TYPE is null");
			return this;
		}

		public Criteria andPersonTypeIsNotNull() {
			addCriterion("PERSON_TYPE is not null");
			return this;
		}

		public Criteria andPersonTypeEqualTo(String value) {
			addCriterion("PERSON_TYPE =", value, "personType");
			return this;
		}

		public Criteria andPersonTypeNotEqualTo(String value) {
			addCriterion("PERSON_TYPE <>", value, "personType");
			return this;
		}

		public Criteria andPersonTypeGreaterThan(String value) {
			addCriterion("PERSON_TYPE >", value, "personType");
			return this;
		}

		public Criteria andPersonTypeGreaterThanOrEqualTo(String value) {
			addCriterion("PERSON_TYPE >=", value, "personType");
			return this;
		}

		public Criteria andPersonTypeLessThan(String value) {
			addCriterion("PERSON_TYPE <", value, "personType");
			return this;
		}

		public Criteria andPersonTypeLessThanOrEqualTo(String value) {
			addCriterion("PERSON_TYPE <=", value, "personType");
			return this;
		}

		public Criteria andPersonTypeLike(String value) {
			addCriterion("PERSON_TYPE like", value, "personType");
			return this;
		}

		public Criteria andPersonTypeNotLike(String value) {
			addCriterion("PERSON_TYPE not like", value, "personType");
			return this;
		}

		public Criteria andPersonTypeIn(List<String> values) {
			addCriterion("PERSON_TYPE in", values, "personType");
			return this;
		}

		public Criteria andPersonTypeNotIn(List<String> values) {
			addCriterion("PERSON_TYPE not in", values, "personType");
			return this;
		}

		public Criteria andPersonTypeBetween(String value1, String value2) {
			addCriterion("PERSON_TYPE between", value1, value2, "personType");
			return this;
		}

		public Criteria andPersonTypeNotBetween(String value1, String value2) {
			addCriterion("PERSON_TYPE not between", value1, value2,
					"personType");
			return this;
		}

		public Criteria andScale1IsNull() {
			addCriterion("SCALE1 is null");
			return this;
		}

		public Criteria andScale1IsNotNull() {
			addCriterion("SCALE1 is not null");
			return this;
		}

		public Criteria andScale1EqualTo(BigDecimal value) {
			addCriterion("SCALE1 =", value, "scale1");
			return this;
		}

		public Criteria andScale1NotEqualTo(BigDecimal value) {
			addCriterion("SCALE1 <>", value, "scale1");
			return this;
		}

		public Criteria andScale1GreaterThan(BigDecimal value) {
			addCriterion("SCALE1 >", value, "scale1");
			return this;
		}

		public Criteria andScale1GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE1 >=", value, "scale1");
			return this;
		}

		public Criteria andScale1LessThan(BigDecimal value) {
			addCriterion("SCALE1 <", value, "scale1");
			return this;
		}

		public Criteria andScale1LessThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE1 <=", value, "scale1");
			return this;
		}

		public Criteria andScale1In(List<BigDecimal> values) {
			addCriterion("SCALE1 in", values, "scale1");
			return this;
		}

		public Criteria andScale1NotIn(List<BigDecimal> values) {
			addCriterion("SCALE1 not in", values, "scale1");
			return this;
		}

		public Criteria andScale1Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE1 between", value1, value2, "scale1");
			return this;
		}

		public Criteria andScale1NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE1 not between", value1, value2, "scale1");
			return this;
		}

		public Criteria andM1IsNull() {
			addCriterion("M1 is null");
			return this;
		}

		public Criteria andM1IsNotNull() {
			addCriterion("M1 is not null");
			return this;
		}

		public Criteria andM1EqualTo(BigDecimal value) {
			addCriterion("M1 =", value, "m1");
			return this;
		}

		public Criteria andM1NotEqualTo(BigDecimal value) {
			addCriterion("M1 <>", value, "m1");
			return this;
		}

		public Criteria andM1GreaterThan(BigDecimal value) {
			addCriterion("M1 >", value, "m1");
			return this;
		}

		public Criteria andM1GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("M1 >=", value, "m1");
			return this;
		}

		public Criteria andM1LessThan(BigDecimal value) {
			addCriterion("M1 <", value, "m1");
			return this;
		}

		public Criteria andM1LessThanOrEqualTo(BigDecimal value) {
			addCriterion("M1 <=", value, "m1");
			return this;
		}

		public Criteria andM1In(List<BigDecimal> values) {
			addCriterion("M1 in", values, "m1");
			return this;
		}

		public Criteria andM1NotIn(List<BigDecimal> values) {
			addCriterion("M1 not in", values, "m1");
			return this;
		}

		public Criteria andM1Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("M1 between", value1, value2, "m1");
			return this;
		}

		public Criteria andM1NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("M1 not between", value1, value2, "m1");
			return this;
		}

		public Criteria andScale2IsNull() {
			addCriterion("SCALE2 is null");
			return this;
		}

		public Criteria andScale2IsNotNull() {
			addCriterion("SCALE2 is not null");
			return this;
		}

		public Criteria andScale2EqualTo(BigDecimal value) {
			addCriterion("SCALE2 =", value, "scale2");
			return this;
		}

		public Criteria andScale2NotEqualTo(BigDecimal value) {
			addCriterion("SCALE2 <>", value, "scale2");
			return this;
		}

		public Criteria andScale2GreaterThan(BigDecimal value) {
			addCriterion("SCALE2 >", value, "scale2");
			return this;
		}

		public Criteria andScale2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE2 >=", value, "scale2");
			return this;
		}

		public Criteria andScale2LessThan(BigDecimal value) {
			addCriterion("SCALE2 <", value, "scale2");
			return this;
		}

		public Criteria andScale2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE2 <=", value, "scale2");
			return this;
		}

		public Criteria andScale2In(List<BigDecimal> values) {
			addCriterion("SCALE2 in", values, "scale2");
			return this;
		}

		public Criteria andScale2NotIn(List<BigDecimal> values) {
			addCriterion("SCALE2 not in", values, "scale2");
			return this;
		}

		public Criteria andScale2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE2 between", value1, value2, "scale2");
			return this;
		}

		public Criteria andScale2NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE2 not between", value1, value2, "scale2");
			return this;
		}

		public Criteria andM2IsNull() {
			addCriterion("M2 is null");
			return this;
		}

		public Criteria andM2IsNotNull() {
			addCriterion("M2 is not null");
			return this;
		}

		public Criteria andM2EqualTo(BigDecimal value) {
			addCriterion("M2 =", value, "m2");
			return this;
		}

		public Criteria andM2NotEqualTo(BigDecimal value) {
			addCriterion("M2 <>", value, "m2");
			return this;
		}

		public Criteria andM2GreaterThan(BigDecimal value) {
			addCriterion("M2 >", value, "m2");
			return this;
		}

		public Criteria andM2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("M2 >=", value, "m2");
			return this;
		}

		public Criteria andM2LessThan(BigDecimal value) {
			addCriterion("M2 <", value, "m2");
			return this;
		}

		public Criteria andM2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("M2 <=", value, "m2");
			return this;
		}

		public Criteria andM2In(List<BigDecimal> values) {
			addCriterion("M2 in", values, "m2");
			return this;
		}

		public Criteria andM2NotIn(List<BigDecimal> values) {
			addCriterion("M2 not in", values, "m2");
			return this;
		}

		public Criteria andM2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("M2 between", value1, value2, "m2");
			return this;
		}

		public Criteria andM2NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("M2 not between", value1, value2, "m2");
			return this;
		}

		public Criteria andScale3IsNull() {
			addCriterion("SCALE3 is null");
			return this;
		}

		public Criteria andScale3IsNotNull() {
			addCriterion("SCALE3 is not null");
			return this;
		}

		public Criteria andScale3EqualTo(BigDecimal value) {
			addCriterion("SCALE3 =", value, "scale3");
			return this;
		}

		public Criteria andScale3NotEqualTo(BigDecimal value) {
			addCriterion("SCALE3 <>", value, "scale3");
			return this;
		}

		public Criteria andScale3GreaterThan(BigDecimal value) {
			addCriterion("SCALE3 >", value, "scale3");
			return this;
		}

		public Criteria andScale3GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE3 >=", value, "scale3");
			return this;
		}

		public Criteria andScale3LessThan(BigDecimal value) {
			addCriterion("SCALE3 <", value, "scale3");
			return this;
		}

		public Criteria andScale3LessThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE3 <=", value, "scale3");
			return this;
		}

		public Criteria andScale3In(List<BigDecimal> values) {
			addCriterion("SCALE3 in", values, "scale3");
			return this;
		}

		public Criteria andScale3NotIn(List<BigDecimal> values) {
			addCriterion("SCALE3 not in", values, "scale3");
			return this;
		}

		public Criteria andScale3Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE3 between", value1, value2, "scale3");
			return this;
		}

		public Criteria andScale3NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE3 not between", value1, value2, "scale3");
			return this;
		}

		public Criteria andM3IsNull() {
			addCriterion("M3 is null");
			return this;
		}

		public Criteria andM3IsNotNull() {
			addCriterion("M3 is not null");
			return this;
		}

		public Criteria andM3EqualTo(BigDecimal value) {
			addCriterion("M3 =", value, "m3");
			return this;
		}

		public Criteria andM3NotEqualTo(BigDecimal value) {
			addCriterion("M3 <>", value, "m3");
			return this;
		}

		public Criteria andM3GreaterThan(BigDecimal value) {
			addCriterion("M3 >", value, "m3");
			return this;
		}

		public Criteria andM3GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("M3 >=", value, "m3");
			return this;
		}

		public Criteria andM3LessThan(BigDecimal value) {
			addCriterion("M3 <", value, "m3");
			return this;
		}

		public Criteria andM3LessThanOrEqualTo(BigDecimal value) {
			addCriterion("M3 <=", value, "m3");
			return this;
		}

		public Criteria andM3In(List<BigDecimal> values) {
			addCriterion("M3 in", values, "m3");
			return this;
		}

		public Criteria andM3NotIn(List<BigDecimal> values) {
			addCriterion("M3 not in", values, "m3");
			return this;
		}

		public Criteria andM3Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("M3 between", value1, value2, "m3");
			return this;
		}

		public Criteria andM3NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("M3 not between", value1, value2, "m3");
			return this;
		}

		public Criteria andScale4IsNull() {
			addCriterion("SCALE4 is null");
			return this;
		}

		public Criteria andScale4IsNotNull() {
			addCriterion("SCALE4 is not null");
			return this;
		}

		public Criteria andScale4EqualTo(BigDecimal value) {
			addCriterion("SCALE4 =", value, "scale4");
			return this;
		}

		public Criteria andScale4NotEqualTo(BigDecimal value) {
			addCriterion("SCALE4 <>", value, "scale4");
			return this;
		}

		public Criteria andScale4GreaterThan(BigDecimal value) {
			addCriterion("SCALE4 >", value, "scale4");
			return this;
		}

		public Criteria andScale4GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE4 >=", value, "scale4");
			return this;
		}

		public Criteria andScale4LessThan(BigDecimal value) {
			addCriterion("SCALE4 <", value, "scale4");
			return this;
		}

		public Criteria andScale4LessThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE4 <=", value, "scale4");
			return this;
		}

		public Criteria andScale4In(List<BigDecimal> values) {
			addCriterion("SCALE4 in", values, "scale4");
			return this;
		}

		public Criteria andScale4NotIn(List<BigDecimal> values) {
			addCriterion("SCALE4 not in", values, "scale4");
			return this;
		}

		public Criteria andScale4Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE4 between", value1, value2, "scale4");
			return this;
		}

		public Criteria andScale4NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE4 not between", value1, value2, "scale4");
			return this;
		}

		public Criteria andM4IsNull() {
			addCriterion("M4 is null");
			return this;
		}

		public Criteria andM4IsNotNull() {
			addCriterion("M4 is not null");
			return this;
		}

		public Criteria andM4EqualTo(BigDecimal value) {
			addCriterion("M4 =", value, "m4");
			return this;
		}

		public Criteria andM4NotEqualTo(BigDecimal value) {
			addCriterion("M4 <>", value, "m4");
			return this;
		}

		public Criteria andM4GreaterThan(BigDecimal value) {
			addCriterion("M4 >", value, "m4");
			return this;
		}

		public Criteria andM4GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("M4 >=", value, "m4");
			return this;
		}

		public Criteria andM4LessThan(BigDecimal value) {
			addCriterion("M4 <", value, "m4");
			return this;
		}

		public Criteria andM4LessThanOrEqualTo(BigDecimal value) {
			addCriterion("M4 <=", value, "m4");
			return this;
		}

		public Criteria andM4In(List<BigDecimal> values) {
			addCriterion("M4 in", values, "m4");
			return this;
		}

		public Criteria andM4NotIn(List<BigDecimal> values) {
			addCriterion("M4 not in", values, "m4");
			return this;
		}

		public Criteria andM4Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("M4 between", value1, value2, "m4");
			return this;
		}

		public Criteria andM4NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("M4 not between", value1, value2, "m4");
			return this;
		}

		public Criteria andScale5IsNull() {
			addCriterion("SCALE5 is null");
			return this;
		}

		public Criteria andScale5IsNotNull() {
			addCriterion("SCALE5 is not null");
			return this;
		}

		public Criteria andScale5EqualTo(BigDecimal value) {
			addCriterion("SCALE5 =", value, "scale5");
			return this;
		}

		public Criteria andScale5NotEqualTo(BigDecimal value) {
			addCriterion("SCALE5 <>", value, "scale5");
			return this;
		}

		public Criteria andScale5GreaterThan(BigDecimal value) {
			addCriterion("SCALE5 >", value, "scale5");
			return this;
		}

		public Criteria andScale5GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE5 >=", value, "scale5");
			return this;
		}

		public Criteria andScale5LessThan(BigDecimal value) {
			addCriterion("SCALE5 <", value, "scale5");
			return this;
		}

		public Criteria andScale5LessThanOrEqualTo(BigDecimal value) {
			addCriterion("SCALE5 <=", value, "scale5");
			return this;
		}

		public Criteria andScale5In(List<BigDecimal> values) {
			addCriterion("SCALE5 in", values, "scale5");
			return this;
		}

		public Criteria andScale5NotIn(List<BigDecimal> values) {
			addCriterion("SCALE5 not in", values, "scale5");
			return this;
		}

		public Criteria andScale5Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE5 between", value1, value2, "scale5");
			return this;
		}

		public Criteria andScale5NotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SCALE5 not between", value1, value2, "scale5");
			return this;
		}
	}
}