package com.mingda.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class HospitalPayExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public HospitalPayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    protected HospitalPayExample(HospitalPayExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.HOSPITAL_PAY
     *
     * @ibatorgenerated Wed Apr 20 09:08:31 CST 2011
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andHospitalIdIsNull() {
            addCriterion("HOSPITAL_ID is null");
            return this;
        }

        public Criteria andHospitalIdIsNotNull() {
            addCriterion("HOSPITAL_ID is not null");
            return this;
        }

        public Criteria andHospitalIdEqualTo(Integer value) {
            addCriterion("HOSPITAL_ID =", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdNotEqualTo(Integer value) {
            addCriterion("HOSPITAL_ID <>", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdGreaterThan(Integer value) {
            addCriterion("HOSPITAL_ID >", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("HOSPITAL_ID >=", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdLessThan(Integer value) {
            addCriterion("HOSPITAL_ID <", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdLessThanOrEqualTo(Integer value) {
            addCriterion("HOSPITAL_ID <=", value, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdIn(List<Integer> values) {
            addCriterion("HOSPITAL_ID in", values, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdNotIn(List<Integer> values) {
            addCriterion("HOSPITAL_ID not in", values, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdBetween(Integer value1, Integer value2) {
            addCriterion("HOSPITAL_ID between", value1, value2, "hospitalId");
            return this;
        }

        public Criteria andHospitalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("HOSPITAL_ID not between", value1, value2, "hospitalId");
            return this;
        }

        public Criteria andFeeFlagIsNull() {
            addCriterion("FEE_FLAG is null");
            return this;
        }

        public Criteria andFeeFlagIsNotNull() {
            addCriterion("FEE_FLAG is not null");
            return this;
        }

        public Criteria andFeeFlagEqualTo(String value) {
            addCriterion("FEE_FLAG =", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagNotEqualTo(String value) {
            addCriterion("FEE_FLAG <>", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagGreaterThan(String value) {
            addCriterion("FEE_FLAG >", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagGreaterThanOrEqualTo(String value) {
            addCriterion("FEE_FLAG >=", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagLessThan(String value) {
            addCriterion("FEE_FLAG <", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagLessThanOrEqualTo(String value) {
            addCriterion("FEE_FLAG <=", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagLike(String value) {
            addCriterion("FEE_FLAG like", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagNotLike(String value) {
            addCriterion("FEE_FLAG not like", value, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagIn(List<String> values) {
            addCriterion("FEE_FLAG in", values, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagNotIn(List<String> values) {
            addCriterion("FEE_FLAG not in", values, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagBetween(String value1, String value2) {
            addCriterion("FEE_FLAG between", value1, value2, "feeFlag");
            return this;
        }

        public Criteria andFeeFlagNotBetween(String value1, String value2) {
            addCriterion("FEE_FLAG not between", value1, value2, "feeFlag");
            return this;
        }

        public Criteria andFeeAmountIsNull() {
            addCriterion("FEE_AMOUNT is null");
            return this;
        }

        public Criteria andFeeAmountIsNotNull() {
            addCriterion("FEE_AMOUNT is not null");
            return this;
        }

        public Criteria andFeeAmountEqualTo(BigDecimal value) {
            addCriterion("FEE_AMOUNT =", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountNotEqualTo(BigDecimal value) {
            addCriterion("FEE_AMOUNT <>", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountGreaterThan(BigDecimal value) {
            addCriterion("FEE_AMOUNT >", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FEE_AMOUNT >=", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountLessThan(BigDecimal value) {
            addCriterion("FEE_AMOUNT <", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FEE_AMOUNT <=", value, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountIn(List<BigDecimal> values) {
            addCriterion("FEE_AMOUNT in", values, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountNotIn(List<BigDecimal> values) {
            addCriterion("FEE_AMOUNT not in", values, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FEE_AMOUNT between", value1, value2, "feeAmount");
            return this;
        }

        public Criteria andFeeAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FEE_AMOUNT not between", value1, value2, "feeAmount");
            return this;
        }

        public Criteria andFeeTimeIsNull() {
            addCriterion("FEE_TIME is null");
            return this;
        }

        public Criteria andFeeTimeIsNotNull() {
            addCriterion("FEE_TIME is not null");
            return this;
        }

        public Criteria andFeeTimeEqualTo(Date value) {
            addCriterion("FEE_TIME =", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeNotEqualTo(Date value) {
            addCriterion("FEE_TIME <>", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeGreaterThan(Date value) {
            addCriterion("FEE_TIME >", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("FEE_TIME >=", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeLessThan(Date value) {
            addCriterion("FEE_TIME <", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeLessThanOrEqualTo(Date value) {
            addCriterion("FEE_TIME <=", value, "feeTime");
            return this;
        }

        public Criteria andFeeTimeIn(List<Date> values) {
            addCriterion("FEE_TIME in", values, "feeTime");
            return this;
        }

        public Criteria andFeeTimeNotIn(List<Date> values) {
            addCriterion("FEE_TIME not in", values, "feeTime");
            return this;
        }

        public Criteria andFeeTimeBetween(Date value1, Date value2) {
            addCriterion("FEE_TIME between", value1, value2, "feeTime");
            return this;
        }

        public Criteria andFeeTimeNotBetween(Date value1, Date value2) {
            addCriterion("FEE_TIME not between", value1, value2, "feeTime");
            return this;
        }
    }
}