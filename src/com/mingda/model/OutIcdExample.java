package com.mingda.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OutIcdExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public OutIcdExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    protected OutIcdExample(OutIcdExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.OUT_ICD
     *
     * @ibatorgenerated Tue Nov 23 14:18:40 CST 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIcdIdIsNull() {
            addCriterion("ICD_ID is null");
            return this;
        }

        public Criteria andIcdIdIsNotNull() {
            addCriterion("ICD_ID is not null");
            return this;
        }

        public Criteria andIcdIdEqualTo(Integer value) {
            addCriterion("ICD_ID =", value, "icdId");
            return this;
        }

        public Criteria andIcdIdNotEqualTo(Integer value) {
            addCriterion("ICD_ID <>", value, "icdId");
            return this;
        }

        public Criteria andIcdIdGreaterThan(Integer value) {
            addCriterion("ICD_ID >", value, "icdId");
            return this;
        }

        public Criteria andIcdIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ICD_ID >=", value, "icdId");
            return this;
        }

        public Criteria andIcdIdLessThan(Integer value) {
            addCriterion("ICD_ID <", value, "icdId");
            return this;
        }

        public Criteria andIcdIdLessThanOrEqualTo(Integer value) {
            addCriterion("ICD_ID <=", value, "icdId");
            return this;
        }

        public Criteria andIcdIdIn(List<Integer> values) {
            addCriterion("ICD_ID in", values, "icdId");
            return this;
        }

        public Criteria andIcdIdNotIn(List<Integer> values) {
            addCriterion("ICD_ID not in", values, "icdId");
            return this;
        }

        public Criteria andIcdIdBetween(Integer value1, Integer value2) {
            addCriterion("ICD_ID between", value1, value2, "icdId");
            return this;
        }

        public Criteria andIcdIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ICD_ID not between", value1, value2, "icdId");
            return this;
        }

        public Criteria andOrganizationIdIsNull() {
            addCriterion("ORGANIZATION_ID is null");
            return this;
        }

        public Criteria andOrganizationIdIsNotNull() {
            addCriterion("ORGANIZATION_ID is not null");
            return this;
        }

        public Criteria andOrganizationIdEqualTo(String value) {
            addCriterion("ORGANIZATION_ID =", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <>", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThan(String value) {
            addCriterion("ORGANIZATION_ID >", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID >=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThan(String value) {
            addCriterion("ORGANIZATION_ID <", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLike(String value) {
            addCriterion("ORGANIZATION_ID like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotLike(String value) {
            addCriterion("ORGANIZATION_ID not like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdIn(List<String> values) {
            addCriterion("ORGANIZATION_ID in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotIn(List<String> values) {
            addCriterion("ORGANIZATION_ID not in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID not between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andOuttypeIsNull() {
            addCriterion("OUTTYPE is null");
            return this;
        }

        public Criteria andOuttypeIsNotNull() {
            addCriterion("OUTTYPE is not null");
            return this;
        }

        public Criteria andOuttypeEqualTo(String value) {
            addCriterion("OUTTYPE =", value, "outtype");
            return this;
        }

        public Criteria andOuttypeNotEqualTo(String value) {
            addCriterion("OUTTYPE <>", value, "outtype");
            return this;
        }

        public Criteria andOuttypeGreaterThan(String value) {
            addCriterion("OUTTYPE >", value, "outtype");
            return this;
        }

        public Criteria andOuttypeGreaterThanOrEqualTo(String value) {
            addCriterion("OUTTYPE >=", value, "outtype");
            return this;
        }

        public Criteria andOuttypeLessThan(String value) {
            addCriterion("OUTTYPE <", value, "outtype");
            return this;
        }

        public Criteria andOuttypeLessThanOrEqualTo(String value) {
            addCriterion("OUTTYPE <=", value, "outtype");
            return this;
        }

        public Criteria andOuttypeLike(String value) {
            addCriterion("OUTTYPE like", value, "outtype");
            return this;
        }

        public Criteria andOuttypeNotLike(String value) {
            addCriterion("OUTTYPE not like", value, "outtype");
            return this;
        }

        public Criteria andOuttypeIn(List<String> values) {
            addCriterion("OUTTYPE in", values, "outtype");
            return this;
        }

        public Criteria andOuttypeNotIn(List<String> values) {
            addCriterion("OUTTYPE not in", values, "outtype");
            return this;
        }

        public Criteria andOuttypeBetween(String value1, String value2) {
            addCriterion("OUTTYPE between", value1, value2, "outtype");
            return this;
        }

        public Criteria andOuttypeNotBetween(String value1, String value2) {
            addCriterion("OUTTYPE not between", value1, value2, "outtype");
            return this;
        }

        public Criteria andCalcTypeIsNull() {
            addCriterion("CALC_TYPE is null");
            return this;
        }

        public Criteria andCalcTypeIsNotNull() {
            addCriterion("CALC_TYPE is not null");
            return this;
        }

        public Criteria andCalcTypeEqualTo(String value) {
            addCriterion("CALC_TYPE =", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeNotEqualTo(String value) {
            addCriterion("CALC_TYPE <>", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeGreaterThan(String value) {
            addCriterion("CALC_TYPE >", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeGreaterThanOrEqualTo(String value) {
            addCriterion("CALC_TYPE >=", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeLessThan(String value) {
            addCriterion("CALC_TYPE <", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeLessThanOrEqualTo(String value) {
            addCriterion("CALC_TYPE <=", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeLike(String value) {
            addCriterion("CALC_TYPE like", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeNotLike(String value) {
            addCriterion("CALC_TYPE not like", value, "calcType");
            return this;
        }

        public Criteria andCalcTypeIn(List<String> values) {
            addCriterion("CALC_TYPE in", values, "calcType");
            return this;
        }

        public Criteria andCalcTypeNotIn(List<String> values) {
            addCriterion("CALC_TYPE not in", values, "calcType");
            return this;
        }

        public Criteria andCalcTypeBetween(String value1, String value2) {
            addCriterion("CALC_TYPE between", value1, value2, "calcType");
            return this;
        }

        public Criteria andCalcTypeNotBetween(String value1, String value2) {
            addCriterion("CALC_TYPE not between", value1, value2, "calcType");
            return this;
        }

        public Criteria andFixValueIsNull() {
            addCriterion("FIX_VALUE is null");
            return this;
        }

        public Criteria andFixValueIsNotNull() {
            addCriterion("FIX_VALUE is not null");
            return this;
        }

        public Criteria andFixValueEqualTo(BigDecimal value) {
            addCriterion("FIX_VALUE =", value, "fixValue");
            return this;
        }

        public Criteria andFixValueNotEqualTo(BigDecimal value) {
            addCriterion("FIX_VALUE <>", value, "fixValue");
            return this;
        }

        public Criteria andFixValueGreaterThan(BigDecimal value) {
            addCriterion("FIX_VALUE >", value, "fixValue");
            return this;
        }

        public Criteria andFixValueGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("FIX_VALUE >=", value, "fixValue");
            return this;
        }

        public Criteria andFixValueLessThan(BigDecimal value) {
            addCriterion("FIX_VALUE <", value, "fixValue");
            return this;
        }

        public Criteria andFixValueLessThanOrEqualTo(BigDecimal value) {
            addCriterion("FIX_VALUE <=", value, "fixValue");
            return this;
        }

        public Criteria andFixValueIn(List<BigDecimal> values) {
            addCriterion("FIX_VALUE in", values, "fixValue");
            return this;
        }

        public Criteria andFixValueNotIn(List<BigDecimal> values) {
            addCriterion("FIX_VALUE not in", values, "fixValue");
            return this;
        }

        public Criteria andFixValueBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FIX_VALUE between", value1, value2, "fixValue");
            return this;
        }

        public Criteria andFixValueNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("FIX_VALUE not between", value1, value2, "fixValue");
            return this;
        }

        public Criteria andScaleIsNull() {
            addCriterion("SCALE is null");
            return this;
        }

        public Criteria andScaleIsNotNull() {
            addCriterion("SCALE is not null");
            return this;
        }

        public Criteria andScaleEqualTo(BigDecimal value) {
            addCriterion("SCALE =", value, "scale");
            return this;
        }

        public Criteria andScaleNotEqualTo(BigDecimal value) {
            addCriterion("SCALE <>", value, "scale");
            return this;
        }

        public Criteria andScaleGreaterThan(BigDecimal value) {
            addCriterion("SCALE >", value, "scale");
            return this;
        }

        public Criteria andScaleGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SCALE >=", value, "scale");
            return this;
        }

        public Criteria andScaleLessThan(BigDecimal value) {
            addCriterion("SCALE <", value, "scale");
            return this;
        }

        public Criteria andScaleLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SCALE <=", value, "scale");
            return this;
        }

        public Criteria andScaleIn(List<BigDecimal> values) {
            addCriterion("SCALE in", values, "scale");
            return this;
        }

        public Criteria andScaleNotIn(List<BigDecimal> values) {
            addCriterion("SCALE not in", values, "scale");
            return this;
        }

        public Criteria andScaleBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCALE between", value1, value2, "scale");
            return this;
        }

        public Criteria andScaleNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCALE not between", value1, value2, "scale");
            return this;
        }

        public Criteria andSeqIsNull() {
            addCriterion("SEQ is null");
            return this;
        }

        public Criteria andSeqIsNotNull() {
            addCriterion("SEQ is not null");
            return this;
        }

        public Criteria andSeqEqualTo(Integer value) {
            addCriterion("SEQ =", value, "seq");
            return this;
        }

        public Criteria andSeqNotEqualTo(Integer value) {
            addCriterion("SEQ <>", value, "seq");
            return this;
        }

        public Criteria andSeqGreaterThan(Integer value) {
            addCriterion("SEQ >", value, "seq");
            return this;
        }

        public Criteria andSeqGreaterThanOrEqualTo(Integer value) {
            addCriterion("SEQ >=", value, "seq");
            return this;
        }

        public Criteria andSeqLessThan(Integer value) {
            addCriterion("SEQ <", value, "seq");
            return this;
        }

        public Criteria andSeqLessThanOrEqualTo(Integer value) {
            addCriterion("SEQ <=", value, "seq");
            return this;
        }

        public Criteria andSeqIn(List<Integer> values) {
            addCriterion("SEQ in", values, "seq");
            return this;
        }

        public Criteria andSeqNotIn(List<Integer> values) {
            addCriterion("SEQ not in", values, "seq");
            return this;
        }

        public Criteria andSeqBetween(Integer value1, Integer value2) {
            addCriterion("SEQ between", value1, value2, "seq");
            return this;
        }

        public Criteria andSeqNotBetween(Integer value1, Integer value2) {
            addCriterion("SEQ not between", value1, value2, "seq");
            return this;
        }

        public Criteria andStsIsNull() {
            addCriterion("STS is null");
            return this;
        }

        public Criteria andStsIsNotNull() {
            addCriterion("STS is not null");
            return this;
        }

        public Criteria andStsEqualTo(String value) {
            addCriterion("STS =", value, "sts");
            return this;
        }

        public Criteria andStsNotEqualTo(String value) {
            addCriterion("STS <>", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThan(String value) {
            addCriterion("STS >", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThanOrEqualTo(String value) {
            addCriterion("STS >=", value, "sts");
            return this;
        }

        public Criteria andStsLessThan(String value) {
            addCriterion("STS <", value, "sts");
            return this;
        }

        public Criteria andStsLessThanOrEqualTo(String value) {
            addCriterion("STS <=", value, "sts");
            return this;
        }

        public Criteria andStsLike(String value) {
            addCriterion("STS like", value, "sts");
            return this;
        }

        public Criteria andStsNotLike(String value) {
            addCriterion("STS not like", value, "sts");
            return this;
        }

        public Criteria andStsIn(List<String> values) {
            addCriterion("STS in", values, "sts");
            return this;
        }

        public Criteria andStsNotIn(List<String> values) {
            addCriterion("STS not in", values, "sts");
            return this;
        }

        public Criteria andStsBetween(String value1, String value2) {
            addCriterion("STS between", value1, value2, "sts");
            return this;
        }

        public Criteria andStsNotBetween(String value1, String value2) {
            addCriterion("STS not between", value1, value2, "sts");
            return this;
        }
    }
}